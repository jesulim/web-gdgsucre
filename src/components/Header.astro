---
import { Image } from "astro:assets"
import CredentialIcon from "@/assets/logos/credential.svg"
import LogoHorizontalBlack from "@/assets/logos/google-io-extended-2025-logo.png"
import LogoutIcon from "@/assets/logos/logout.svg"
import { createUserClient } from "@/lib/supabase"

const supabase = await createUserClient(Astro.cookies)
const {
  data: { user },
} = await supabase.auth.getUser()

const navLinks = [
  { name: "Paquetes", href: "#paquetes" },
  { name: "About Us", href: "#about" },
  { name: "Speakers", href: "#speakers" },
  { name: "Sponsors", href: "#sponsors" },
  { name: "Agenda", href: "#agenda" },
]
---

<nav class="w-full h-[100px] bg-white flex items-center justify-between px-6 border-b shadow-sm">
  <a href="/" class="flex items-center">
    <Image src={LogoHorizontalBlack} alt="GDG Logo" width={200} height={46} class="object-contain" />
  </a>

  <!-- Navegación -->
  <ul class="hidden md:flex gap-[49px] h-[32px]">
    {navLinks.map(link => (
      <li>
        <a href={link.href} class="text-gray-800 text-base font-medium leading-6 pb-1 border-b-2 border-transparent hover:border-blue-500 hover:text-blue-500 transition-colors duration-200">
          {link.name}
        </a>
      </li>
    ))}
  </ul>

  <!-- Botones / Sesión -->
  <div class="flex items-center gap-4 h-[42px]">
    <a href="/api/auth/eventos" class="text-blue-500 border-2 border-blue-500 bg-white hover:bg-[#4285F4] hover:text-white font-medium text-base leading-6 px-6 py-[9px] rounded-full transition-colors duration-200">
      Eventos Pasados
    </a>

    {user ? (
      <!-- menu desplegable del -->
      <div class="relative">
        <button 
          id="avatar-btn"
          class="w-[60px] h-[60px] rounded-full overflow-hidden border-2 border-gray-200 hover:border-blue-500 transition-all duration-300 ease-out"
          aria-haspopup="true"
          aria-expanded="false"
        >
          <img
            src={user.user_metadata?.avatar_url || '/default-avatar.png'}
            alt="User Avatar"
            class="w-full h-full object-cover"
          />
        </button>

        <div id="user-menu" class="absolute right-0 mt-2 w-[176px] h-[93px] bg-white rounded-[8px] shadow-lg px-4 py-[10px] z-50 border border-gray-200 hidden opacity-0 transition-opacity duration-300 flex flex-col gap-4">
          <a 
            href="/credencial" 
            class="flex items-center w-[144px] h-[24px] gap-2 px-1 text-[#1E1E1E] text-base font-medium leading-6 hover:text-[#4285F4] transition-colors duration-200"
          >
            <CredentialIcon class="w-[21px] h-[17px] fill-current text-black" />
            <span class="text-[16px] font-medium leading-6">Ver Credencial</span>
          </a>

          <a 
            href="/api/auth/signout" 
            class="flex items-center w-[144px] h-[24px] gap-2 px-1 text-[#1E1E1E] text-base font-medium leading-6 hover:text-[#4285F4] transition-colors duration-200"
          >
            <LogoutIcon class="w-[21px] h-[17px] fill-current text-black" />
            <span class="text-[16px] font-medium leading-6">Cerrar Sesión</span>
          </a>
        </div>
      </div>

    ) : (
      <a 
        href="/api/auth/signin" 
        class="bg-[#4285F4] text-white hover:bg-[#3367D6] font-medium text-base leading-6 px-8 py-[9px] rounded-full transition-colors duration-200"
      >
        Iniciar Sesión
      </a>
    )}

    <!-- Mobile toggle (ahora después del avatar) -->
    <button id="menu-toggle" class="md:hidden p-2 border rounded">
      <svg class="w-6 h-6 text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16" />
      </svg>
    </button>

  </div>

  <!-- Menú móvil hamburguesa -->
  <div id="mobile-menu" class="absolute top-full left-0 w-full bg-white shadow-md py-4 px-6 flex-col gap-4 hidden md:hidden border-t border-gray-200">
    <ul class="flex flex-col gap-4">
      {navLinks.map(link => (
        <li>
          <a href={link.href} class="text-gray-800 text-lg font-medium hover:text-blue-500 transition-colors">
            {link.name}
          </a>
        </li>
      ))}
    </ul>
    <a href="/api/auth/eventos" class="mt-4 block text-blue-500 border-2 border-blue-500 bg-white hover:bg-[#4285F4] hover:text-white text-center font-medium text-base leading-6 px-6 py-[9px] rounded-full transition-colors duration-200">
      Eventos Pasados
    </a>
  </div>

</nav>

<script type="module" is:inline>
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  const avatarBtn = document.getElementById('avatar-btn');
  const userMenu = document.getElementById('user-menu');

  let isMenuOpen = false;
  let isUserMenuOpen = false;

  menuToggle?.addEventListener('click', () => {
    isMenuOpen = !isMenuOpen;
    mobileMenu.classList.toggle('hidden', !isMenuOpen);
  });

  avatarBtn?.addEventListener('click', (e) => {
    e.stopPropagation();
    isUserMenuOpen = !isUserMenuOpen;
    if (isUserMenuOpen) {
      userMenu.classList.remove('hidden');
      requestAnimationFrame(() => {
        userMenu.classList.add('opacity-100');
        userMenu.classList.remove('opacity-0');
      });
    } else {
      userMenu.classList.remove('opacity-100');
      userMenu.classList.add('opacity-0');
      setTimeout(() => userMenu.classList.add('hidden'), 300);
    }
    avatarBtn.setAttribute('aria-expanded', isUserMenuOpen);
  });

  document.addEventListener('click', (e) => {
    if (!avatarBtn?.contains(e.target) && !userMenu?.contains(e.target)) {
      isUserMenuOpen = false;
      userMenu?.classList.remove('opacity-100');
      userMenu?.classList.add('opacity-0');
      setTimeout(() => userMenu?.classList.add('hidden'), 300);
      avatarBtn?.setAttribute('aria-expanded', false);
    }
  });
</script>